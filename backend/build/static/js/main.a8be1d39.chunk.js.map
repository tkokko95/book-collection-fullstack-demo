{"version":3,"sources":["services/books.js","components/BookList.js","components/BookForm.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","getAll","a","axios","get","response","data","create","post","update","id","put","remove","delete","booksService","BookList","books","handleSelectionChange","selectedBook","sortedBooks","sort","b","author","localeCompare","type","className","map","book","onClick","title","BookForm","fetchBooks","showNotification","blankForm","description","useState","formData","setFormData","editMode","formDataIsValid","useEffect","handleSubmitNew","info","error","handleSubmitEdit","message","handleDeleteButton","handleChange","event","target","name","value","onChange","maxLength","rows","columns","disabled","Notification","App","setBooks","setSelectedBook","notification","setNotification","fetchedBooks","setTimeout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a8be1d39.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = '/api/books'\n\nconst getAll = async () => {\n    const response = await axios.get(baseUrl)\n    return response.data\n}\n\nconst create = async (data) => {\n    const response = await axios.post(baseUrl, data)\n    return response.data\n}\n\nconst update = async (data, id) => {\n    const response = await axios.put(`${baseUrl}/${id}`, data)\n    return response.data\n}\n\nconst remove = async (id) => {\n    const response = await axios.delete(`${baseUrl}/${id}`)\n    return response.data\n}\n\nconst booksService = { getAll, create, update, remove }\n\nexport default booksService","import React from 'react'\nconst BookList = ({ books, handleSelectionChange, selectedBook }) => {\n\n    const sortedBooks = books.sort((a, b) => a.author.localeCompare(b.author))\n    return(\n        <ul type='none' className='bookList'>\n            {sortedBooks.map((book) => {\n                return(\n                    <li\n                        key={book.id}\n                        className={selectedBook?.id === book.id ? 'selectedBook' : 'book'}\n                        onClick={() => handleSelectionChange(book)}\n                    >\n                        {book.author} - <strong>{book.title}</strong>\n                    </li>\n                )\n            })}\n        </ul>\n    )\n}\n\nexport default BookList","import React, { useState, useEffect } from 'react'\nimport booksService from '../services/books'\n\nconst BookForm = ({ selectedBook, handleSelectionChange, fetchBooks, showNotification }) => {\n    const blankForm = {\n        title: '',\n        author: '',\n        description:''\n    }\n    const [formData, setFormData] = useState(blankForm)\n    const editMode = selectedBook.title ? true : false\n\n    const formDataIsValid = () => {\n        if (formData.title && formData.author) {\n            return true\n        }\n        return false\n    }\n\n\n    useEffect(() => {\n        setFormData(selectedBook)\n    }, [selectedBook])\n\n    const handleSubmitNew = async () => {\n        try {\n            await booksService.create(formData)\n            await fetchBooks()\n            setFormData(blankForm)\n            showNotification({\n                info: 'Book succesfully added'\n            })\n        } catch(error) {\n            showNotification({\n                error: `${error}: Make sure that the title doesn't already exist`\n            })\n        }\n    }\n\n    const handleSubmitEdit = async () => {\n        try {\n            await booksService.update(formData, selectedBook.id)\n            setFormData(blankForm)\n            handleSelectionChange(blankForm)\n            showNotification({\n                info: 'Book successfully modified'\n            })\n        } catch(error) {\n            showNotification({\n                error: `${error.message}: This item might have been deleted`\n            })\n        } finally {\n            await fetchBooks()\n        }\n    }\n\n    const handleDeleteButton = async () => {\n        try {\n            await booksService.remove(selectedBook.id)\n            setFormData(blankForm)\n            handleSelectionChange(blankForm)\n            showNotification({\n                info: 'Book successfully deleted'\n            })\n        } catch(error) {\n            showNotification({\n                error: `${error.message}: This item might have already been deleted`\n            })\n        } finally {\n            await fetchBooks()\n        }\n    }\n\n    const handleCancelButton = () => {\n        handleSelectionChange(blankForm)\n    }\n\n    const handleChange = (event) => {\n        setFormData({\n            ...formData,\n            [event.target.name]: event.target.value\n        })\n    }\n\n    return(\n        <div className='bookForm'>\n            <label>\n                Title *\n                <br/>\n                <input\n                    type='text'\n                    value={formData.title}\n                    name='title'\n                    id='titleInput'\n                    onChange={handleChange}\n                    maxLength='50'\n                />\n            </label>\n            <br />\n            <label>\n                Author *\n                <br/>\n                <input\n                    type='text'\n                    value={formData.author}\n                    name='author'\n                    id='authorInput'\n                    onChange={handleChange}\n                    maxLength='50'\n                />\n            </label>\n            <br />\n            <label>\n                Description\n                <br/>\n                <textarea\n                    type='text'\n                    rows='10'\n                    columns='10'\n                    value={formData.description}\n                    name='description'\n                    id='descriptionInput'\n                    maxLength='150'\n                    onChange={handleChange}\n                />\n            </label>\n            <br />\n            <button disabled={editMode || !formDataIsValid()} onClick={handleSubmitNew} id='saveNewButton'>Save New</button>\n            <button disabled={!editMode || !formDataIsValid()} onClick={handleSubmitEdit} id='saveEditedButton'>Save</button>\n            <button disabled={!editMode} onClick={handleDeleteButton} id='deleteButton'>Delete</button>\n            <button disabled={!editMode} onClick={handleCancelButton} id='cancelButton'>Cancel</button>\n        </div>\n    )\n\n}\n\nexport default BookForm","import React from 'react'\n\nconst Notification = ({ message, className }) => {\n    if(!message) {\n        return null\n    }\n    return (\n        <div className={className}>\n            {message}\n        </div>\n    )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\n\nimport booksService from './services/books'\nimport BookList from './components/BookList'\nimport BookForm from './components/BookForm'\nimport Notification from './components/Notification'\n\n\n\nconst App = () => {\n    const [books, setBooks] = useState([])\n    const [selectedBook, setSelectedBook] = useState({\n        title: '',\n        author: '',\n        description: ''\n    })\n    const [notification, setNotification] = useState(null)\n\n    const fetchBooks = async () => {\n        try {\n            const fetchedBooks = await booksService.getAll()\n            setBooks(fetchedBooks)\n        } catch (error) {\n            showNotification({\n                error: 'Failed to fetch data from the server'\n            })\n        }\n    }\n\n    const showNotification = (notification) => {\n        setNotification(notification)\n        setTimeout(() => {\n            setNotification(null)\n        }, 5000)\n    }\n\n    useEffect(() => {\n        fetchBooks()\n    }, [])\n\n    const handleSelectionChange = (book) => {\n        setSelectedBook(book)\n    }\n\n\n    return (\n        <div className='mainContainer'>\n            <Notification\n                message={notification?.info || notification?.error}\n                className={`\n                    ${notification?.error ? 'error' : 'info'}\n                    notification\n                `}\n            />\n            <br />\n            <BookForm\n                selectedBook={selectedBook}\n                handleSelectionChange={handleSelectionChange}\n                fetchBooks={fetchBooks}\n                showNotification={showNotification}\n            />\n            <BookList\n                books={books}\n                selectedBook={selectedBook}\n                handleSelectionChange={handleSelectionChange}\n            />\n        </div>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}